name: "🍺 Release Build"

on:
  push:
    tags:
      - 'v*'

env:
  PROJECT_ID: "572984"

jobs:
  modpack-info:
    runs-on: ubuntu-latest
    outputs:
      projectname: ${{ steps.info.outputs.projectname }}
      version: ${{ steps.info.outputs.version }}
      tag: ${{ steps.version.outputs.tag }}
    name: "📙 Modpack Info"
    steps:
      - name: "🔁 Checkout"
        uses: actions/checkout@v2
      - name: "💾 Get modpack info"
        id: info
        run: |
            manifestjson=`cat ./modpack/manifest.json`
            projectname=`echo $(jq -r '.name' <<< "$manifestjson")`
            echo "::set-output name=projectname::$projectname"
            version=`echo $(jq -r '.minecraft.version' <<< "$manifestjson")`
            echo "::set-output name=version::$version"
      - name: "📛 Get tag"
        id: version
        uses: "WyriHaximus/github-action-get-previous-tag@v1"

  changelog:
    runs-on: ubuntu-latest
    name: "📜 Changelog"
    outputs:
      changelog: ${{steps.changelog.outputs.changelog}}
    steps:
      - name: "🔁 Checkout"
        uses: actions/checkout@v2
      - name: "✍️ Write Changelogs"
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v2.7.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: ubuntu-latest
    needs: [changelog, modpack-info]
    name: "📦 Build"
    steps:
      - name: "🔁 Checkout"
        uses: actions/checkout@v2
      - name: "🚀 Download PAX"
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: froehlichA/pax
          file: "pax"
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: "🚢 Export modpack"
        run: |
          sudo chmod +x ./pax
          ./pax export
      - name: "🏹 Rename zip"
        run: |
          mv .out/${{ needs.modpack-info.outputs.projectname }}.zip .out/${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}.zip
      - name: "🔼 Upload zip"
        uses: actions/upload-artifact@v2
        with:
          name: modpack
          path: .out/${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}.zip
      - name: Update server.yaml
        uses: fjogeleit/yaml-update-action@master
        with:
          valueFile: 'serverpack/server-setup-config.yaml'
          propertyPath: 'install.modpackUrl'
          value: https://github.com/Unately/uBingo/releases/latest/downloads/${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}.zip
          commitChange: false
          updateFile: true
      - name: "🔼 Upload Server zip"
        uses: actions/upload-artifact@v2
        with:
          name: server
          path: serverpack/*
  
  release-github:
    runs-on: ubuntu-latest
    needs: [build, changelog, modpack-info]
    name: "🎉 Release"
    steps:
      - name: "🔽 Download modpack"
        uses: actions/download-artifact@v2
        with:
          name: modpack
      - name: "Download server"
        uses: actions/dowload-artifact@v2
        with:
          name: server
      - name: "🥨 Get release type"
        id: release-type
        run: |
          rel_type="release"
          case "${{ needs.modpack-info.outputs.tag }}" in
            *alpha*) rel_type="true" ;;
            *beta*) rel_type="true" ;;
            *) rel_type="false" ;;
          esac
          echo "::set-output name=type::$rel_type"
      - name: "🧬 Create release"
        uses: softprops/action-gh-release@v1
        with:
          body_path: ${{steps.changelog.outputs.changelog}}
          prerelease: ${{ steps.release-type.outputs.type }}
          files: ${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
