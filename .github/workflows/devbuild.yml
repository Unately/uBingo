name: "🎹 Development"

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches:
      - dev
      - 'feature/**'
      - 'fix/**'
      - 'release/**'

jobs:
  modpack-info:
    runs-on: ubuntu-latest
    outputs:
      projectname: ${{ steps.name.outputs.value }}
      version: ${{ steps.version.outputs.value }}
    name: "📙 Modpack Info"
    steps:
      - name: "🔁 Checkout"
        uses: actions/checkout@v2
      - name: "💾 Get modpack version"
        id: version
        uses: SebRollen/toml-action@v1.0.0
        with:
            file: 'modpack/pack.toml'
            field: 'version'
      - name: "💾 Get modpack name"
        id: name
        uses: SebRollen/toml-action@v1.0.0
        with:
            file: 'modpack/pack.toml'
            field: 'name'

  changelog:
    runs-on: ubuntu-latest
    name: "📜 Changelog"
    outputs:
      changelog: ${{steps.changelog.outputs.changelog}}
    steps:
      - name: "🔁 Checkout"
        uses: actions/checkout@v2
      - name: "✍️ Write changelog"
        id: changelog
        uses: heinrichreimer/github-changelog-generator-action@v2.1.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          output: CHANGELOG.md
          stripGeneratorNotice: true
      - name: "💽 Save changelog"
        uses: actions/upload-artifact@v2
        with:
          name: modpack
          path: CHANGELOG.md

  build_pack:
      runs-on: ubuntu-latest
      needs: [ changelog, modpack-info ]
      name: "📦 Build"
      env: 
          workdir: ./modpack
      steps:
          -   name: "🔁 Checkout"
              uses: actions/checkout@v2
          -   name: "🚀 Download PACKWIZ"
              uses: dsaltares/fetch-gh-release-asset@master
              run: wget https://cdn.unately.com/packwiz
              working-directory: ${{ env.workdir }}
          -   name: "🍿 Create folders"
              run: |
                  mkdir build
                  mkdir cursebuild
              working-directory: ${{ env.workdir }}
          -   name: "🚢 Export modpack curseforge"
              run: |
                  sudo chmod +x ./packwiz
                  ./packwiz curseforge export --output build/${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.version }}.zip
              working-directory: ${{ env.workdir }}
          -   name: " Export modpack modrinth"
              run: |
                  ./packwiz modrinth export --output build/${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.version }}.mrpack
              working-directory: ${{ env.workdir }}
          -   name: "🚚 Unpack zip"
              run: unzip build/${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.version }}.zip -d cursebuild
              working-directory: ${{ env.workdir }}
          -   name: "🔼 Upload curseforge"
              uses: actions/upload-artifact@v2
              with:
                  name: modpack-curseforge
                  path: modpack/cursebuild/*
          -   name: "🔼 Upload modrinth"
              uses: actions/upload-artifact@v2
              with:
                  name: modpack-curseforge
                  path: modpack/build/${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.version }}.mrpack
          -   name: "🔼 Upload Server zip"
              uses: actions/upload-artifact@v2
              with:
                  name: server
                  path:
                      serverpack/*  

#  modlist:
#    runs-on: ubuntu-latest
#    name: "🗒️ Modlist"
#    steps:
#      - name: "🔁 Checkout"
#        uses: actions/checkout@v2
#      - name: "☕ Setup Java"
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin'
#          java-version: '17'
#      - name: "⚾ Setup ModListCreator"
#        uses: wei/wget@v1.1.1
#        with:
#          args: ${{ secrets.MODLISTCREATOR_URL }}
#      - name: "📫 Create list"
#        run: java -jar ${{ secrets.MODLISTCREATOR_FILE }} --manifest .\modpack\manifest.json --output . --md
#      - name: "💽 Save modlist"
#        uses: actions/upload-artifact@v2
#        with:
#          name: modpack
#          path: modlist.md

#  build_image:
#    runs-on: ubuntu-latest
#    needs: [build_pack, modpack-info]
#    name: "🐳 Build Package"
#    steps:
#      - name: "🔁 Checkout"
#        uses: actions/checkout@v2
#      - name: "🔽 Download modpack"
#        uses: actions/download-artifact@v2
#        with:
#          name: modpack
#      - name: "🖨️ Change Docker Config Version"
#        uses: fjogeleit/yaml-update-action@master
#        with:
#          valueFile: 'dockerfiles/docker-setup-config.yaml'
#          propertyPath: 'install.modpackUrl'
#          value: file://./${{ needs.modpack-info.outputs.tag }}/${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}.zip
#          commitChange: false
#          updateFile: true
#      - uses: docker/login-action@v1
#        with:
#          registry: ghcr.io
#          username: ${{ github.repository_owner }}
#          password: ${{ secrets.REGISTRY_TOKEN }}
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#      - name: Build and push
#        uses: docker/build-push-action@v2
#        with:
#          context: .
#          file: ./Dockerfile
#          push: true
#          tags: |
#            ghcr.io/unately/ubingo:dev

  # discord_message:
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   name: "🦞 Post to Discord"
  #   steps:
  #     - name: "🔁 Checkout"
  #       uses: actions/checkout@v2
  #     - name: "👋🏻 Post in #news"
  #       uses: tsickert/discord-webhook@v4.0.0
  #       with:
  #         webhook-url: ${{ secrets.WEBHOOK_URL }}
  #         embed-author-name: "GitHub"
  #         embed-author-url: "https://github.com/Unately/uBingo"
  #         embed-color: 3696598
  #         embed-title: "uBingo ${{ needs.modpack-info.outputs.tag }} Released! 🎉"
  #         embed-description: "We released version ${{ needs.modpack-info.outputs.tag }} of the uBingo modpack.\n\nYou can now update it in Curseforge, GDLauncher etc.\n\nhttps://github.com/Unately/uBingo/releases"
  #         embed-timestamp: "2008-03-13T19:14:00.000Z"
  #         embed-footer-text: "Unately"
  #         embed-thumbnail-url: "https://i.ibb.co/9cr792q/asd.png"
  #         filename: modlist.md
